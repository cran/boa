boa.par                 package:boa                 R Documentation

_G_l_o_b_a_l _P_a_r_a_m_e_t_e_r_s

_D_e_s_c_r_i_p_t_i_o_n:

     Displays and sets the global parameters stored internally for use
     during a BOA session.

_U_s_a_g_e:

     boa.par(...)

_A_r_g_u_m_e_n_t_s:

     ...: A list may be given as the only argument, or a character
          string  given as the only argument, or any number of
          arguments may be in the  '<name> = <value>' form, or no
          argument at all may be given.

_V_a_l_u_e:

     If no arguments are supplied, a list of the current values is
     returned. If a  character string is given, the current value of
     the named variable is returned.  Otherwise, a list of the named
     variables and their old values is returned, but  not printed.

_P_a_r_a_m_e_t_e_r _N_a_m_e_s _a_n_d _D_e_f_a_u_l_t _V_a_l_u_e_s:

     _a_c_f._l_a_g_s = _c(_1, _5, _1_0, _5_0) Numeric vector of lags at which to
          estimate  the autocorrelation function.

     _a_l_p_h_a = _0._0_5 Type I error rate used for all statistical tests and 
          confidence intervals.

     _A_S_C_I_I_e_x_t = "._t_x_t" Character string giving the filename extension
          used  when importing ASCII files.

     _b_a_n_d_w_i_d_t_h = _f_u_n_c_t_i_o_n(_x) _0._5 * _d_i_f_f(_r_a_n_g_e(_x)) / (_l_o_g(_l_e_n_g_t_h(_x)) + _1) 
          Function for computing the bandwidth used in estimating the
          density functions  for parameters. This should take one
          argument which is a numeric vector of  data on which density
          estimation is to be performed. A constant bandwidth may  be
          specified by having this function return the desired
          constant.

     _b_a_t_c_h._s_i_z_e = _5_0 Number of iterations to include in each batch when
           computing batch means and lag-1 batch autocorrelations. The
          batch size has  the single largest impact on the time
          required to compute summary statistics.  The computation time
          is decreased dramatically as the batch size increases. 
          Consequently, users may want to increase the value of this
          variable for long  MCMC sequences.

     _d_e_v = <<_s_e_e _b_e_l_o_w>> Character string giving the name of the
          function  that creates graphics windows on the current
          platform. For Unix systems this  is either "motif",
          "openlook", or "X11". The default is "motif" for the UNIX 
          S-PLUS, "win.graph" for Windows S-PLUS, "X11" for UNIX R, and
          "windows" for Windows R.

     _d_e_v._l_i_s_t = _n_u_m_e_r_i_c(_0) Numeric vector containing the active
          graphics  windows in use by the program. This is
          automatically maintained by the  program, user should not
          directly modify this variable.

     _g_a_n_d_r._b_i_n_s = _2_0 Number of line segments within the MCMC sequence
          at  which to plot the Gelman and Rubin shrink factors.

     _g_a_n_d_r._w_i_n = _0._5_0 Proportion of iterations to include in the
          Brooks,  Gelman, and Rubin Statistics.

     _g_e_w_e_k_e._b_i_n_s = _1_0 Number of line segments within the MCMC sequence
          at  which to plot the Geweke convergence diagnostics.

     _g_e_w_e_k_e._f_i_r_s_t = _0._1 Proportion of iterations to include in the
          first  window when computing the Geweke convergence
          diagnostics.

     _g_e_w_e_k_e._l_a_s_t = _0._5 Proportion of iterations to include in the last 
          window when computing the Geweke convergence diagnostics.

     _h_a_n_d_w._e_r_r_o_r = _0._1 Accuracy of the posterior estimates when
          computing  the Heidleberger and Welch convergence
          diagnostics.

     _k_e_r_n_e_l = "_g_a_u_s_s_i_a_n" Character string giving the type of window
          used in  estimating the density functions for parameters.
          Other choices are "cosine",  "rectangular", or "triangular".

     _l_e_g_e_n_d = _T_R_U_E Logical value indicating that a legend be included
          in  the plots.

     _p_a_t_h = "" Character string giving the directory path in which the
          raw  data files are stored. The default may be used if the
          files are located in  the current working directory.  The
          specified path should not end with a slash(es).

     _p_a_r = _l_i_s_t() List specifying graphics parameters passed to the
          'par' function for the construction of new plots.

     _p_l_o_t._m_f_d_i_m = _c(_3, _2) Numeric vector giving the maximum number of
          rows  and columns, respectively, of plots to include in a
          single graphics window.

     _p_l_o_t._n_e_w = _F Logical value indicating that a new graphics window
          be  automatically opened upon successive calls to boa.plot().
          Otherwise, previous  graphics windows will be closed.

     _p_l_o_t._o_n_e_l_i_n_k = _F_A_L_S_E Logical value indicating that each plot
          should include  only one MCMC sequence. Otherwise, all
          sequences are displayed on the same plot.

     _q_u_a_n_t_i_l_e_s = _c(_0._0_2_5, _0._5, _0._9_7_5) Vector of probabilities at which
          to  compute the quantiles. Values must be between 0 and 1.

     _r_a_n_d_l._e_r_r_o_r = _0._0_0_5 Desired amount of error in estimating the
          quantile  specified in the Raftery and Lewis convergence
          diagnostics.

     _r_a_n_d_l._d_e_l_t_a = _0._0_0_1 Delta valued used in computing the Raftery and
          Lewis  convergence diagnostics.

     _r_a_n_d_l._q = _0._0_2_5 Quantile to be estimated in computing the Raftery
          and  Lewis convergence diagnostics.

     _t_i_t_l_e = _T_R_U_E Logical value indicating that a title be added to the
          plots.

_S_i_d_e _E_f_f_e_c_t_s:

     When variables are set, boa.par() modifies the internal list
     .boa.par. If  boa.par() is called with either a list as the single
     argument, or with one or  more arguments in the <name> = <value>
     form, the variables specified by the  names in the arguments are
     modified.

_A_u_t_h_o_r(_s):

     Brian J. Smith

